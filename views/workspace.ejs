<!DOCTYPE HTML>
<html>
  <head>
    <meta charset="utf-8">

    <title> Eduino - Workspace </title>

    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/font-awesome.css">
    <link rel="stylesheet" href="/css/spinner.css">
    <link rel="stylesheet" href="/css/style_new.css">
  </head>

  <body>

    <div class="alertBox"></div>

    <nav>
      <div id="logo">
        <img src="/img/logo/eduino.png">
      </div>

      <div id="project-info">
        <ul>
          <li class="title"> 아두이노로 드론 만들기 </li>
          <li class="creator"> By 조동현 </li>
          <li class="float-right back"> <i class="fa fa-undo" aria-hidden="true"></i> 돌아가기 </li>
          <li class="float-right save" onclick="saveCode()"> <i class="fa fa-floppy-o" aria-hidden="true"></i> 저장하기 </li>
          <li id="workspace_transition" class="float-right save"> <i class="fa fa-floppy-o" aria-hidden="true"></i> 편집기 열기 </li>
          <li class="float-right publish public"> <i class="fa fa-unlock" aria-hidden="true"></i> </li>
        </ul>
      </div>
    </nav>

    <xml id="toolbox" style="display: none">
        <category name='만약에'>

            <block type="controls_if"></block>
            <block type="controls_if">
                <mutation else="1"></mutation>
            </block>
            <block type="controls_if">
                <mutation elseif="1" else="1"></mutation>
            </block>
        </category>
        <category name="조건">
            <block type="logic_compare"></block>
            <block type="logic_operation"></block>
            <block type="logic_negate"></block>
            <block type="logic_boolean"></block>
            <block type="logic_null"></block>
            <block type="logic_ternary"></block>
        </category>
        <!--</category>-->
        <category name="반복">
            <block type="controls_repeat_ext">
                <value name="TIMES">
                    <block type="math_number">
                        <field name="NUM">10</field>
                    </block>
                </value>
            </block>
            <block type="controls_whileUntil"></block>
            <block type="controls_for">
                <field name="VAR">i</field>
                <value name="FROM">
                    <block type="math_number">
                        <field name="NUM">1</field>
                    </block>
                </value>
                <value name="TO">
                    <block type="math_number">
                        <field name="NUM">10</field>
                    </block>
                </value>
                <value name="BY">
                    <block type="math_number">
                        <field name="NUM">1</field>
                    </block>
                </value>
            </block>
            <block type="controls_forEach"></block>
            <block type="controls_flow_statements"></block>
        </category>
        <category name="숫자연산">
            <block type="math_number"></block>
            <block type="math_arithmetic"></block>
            <block type="math_single"></block>
            <block type="math_trig"></block>
            <block type="math_constant"></block>
            <block type="math_number_property"></block>
            <block type="math_round"></block>
            <block type="math_on_list"></block>
            <block type="math_modulo"></block>
            <block type="math_constrain">
                <value name="LOW">
                    <block type="math_number">
                        <field name="NUM">1</field>
                    </block>
                </value>
                <value name="HIGH">
                    <block type="math_number">
                        <field name="NUM">100</field>
                    </block>
                </value>
            </block>
            <block type="math_random_int">
                <value name="FROM">
                    <block type="math_number">
                        <field name="NUM">1</field>
                    </block>
                </value>
                <value name="TO">
                    <block type="math_number">
                        <field name="NUM">100</field>
                    </block>
                </value>
            </block>
            <block type="math_random_float"></block>
        </category>
        <category name="리스트">
            <block type="lists_create_empty"></block>
            <block type="lists_create_with"></block>
            <block type="lists_repeat">
                <value name="NUM">
                    <block type="math_number">
                        <field name="NUM">5</field>
                    </block>
                </value>
            </block>
            <block type="lists_length"></block>
            <block type="lists_isEmpty"></block>
            <block type="lists_indexOf"></block>
            <block type="lists_getIndex"></block>
            <block type="lists_setIndex"></block>
        </category>

        <category name="글자들">
            <block type="text"></block>
            <block type="text_join"></block>
            <block type="text_create_join_container"></block>
            <block type="text_create_join_item"></block>
            <block type="text_append"></block>
            <block type="text_length"></block>
            <block type="text_isEmpty"></block>
            <block type="text_indexOf"></block>
            <block type="text_charAt"></block>
            <block type="text_getSubstring"></block>
            <block type="text_changeCase"></block>
            <block type="text_trim"></block>
            <block type="text_print"></block>
            <block type="text_prompt_ext"></block>
            <block type="text_prompt"></block>

        </category>
        <sep></sep>
    </xml>
    <div class="wrapper">
        <div class="container">
            <div id="blocklyDiv"></div>
        </div>
    </div>

    <xml id="startBlocks" style="display: none">
        <!--    <%= projectxml %> -->
    </xml>
  <!--
    <aside>
      <ul>
        <li> <i class="fa fa-question" aria-hidden="true"></i> 만약에 </li>
        <li> <i class="fa fa-random" aria-hidden="true"></i> 조건 </li>
        <li> <i class="fa fa-retweet" aria-hidden="true"></i> 반복 </li>
        <li> <i class="fa fa-plus" aria-hidden="true"></i> 계산 </li>
        <li> <i class="fa fa-list" aria-hidden="true"></i> 목록 </li>
        <li> <i class="fa fa-font" aria-hidden="true"></i> 글자 </li>
        <li> <i class="fa fa-square-o" aria-hidden="true"></i> 변수 </li>
        <li> <i class="fa fa-puzzle-piece" aria-hidden="true"></i> 함수 </li>
        <li> <i class="fa fa-star" aria-hidden="true"></i> 사용자 지정 블럭 </li>
      </ul>

      <div class="wrapper">
          <div class="container">
              <p></p>
              <div id="blocklyDiv"></div>
          </div>
      </div>
    </aside>
-->
    <div id="subAside">

    </div>

    <section>

    </section>

<!--
    <script src="https://code.jquery.com/jquery-2.2.4.min.js"></script>
-->
    <script src="/js/jquery-1.11.2.min.js"></script>
    <script src="./js/main.js"></script>-->
    <script src="/js/blockly_compressed.js"></script>

    <script src="/js/blocks/colour.js"></script>
    <script src="/js/blocks/gesture.js"></script>
    <script src="/js/blocks/lists.js"></script>
    <script src="/js/blocks/logic.js"></script>
    <script src="/js/blocks/loops.js"></script>
    <script src="/js/blocks/math.js"></script>
    <script src="/js/blocks/procedures.js"></script>
    <script src="/js/blocks/text.js"></script>
    <script src="/js/blocks/variables.js"></script>
    <script src="/js/blocks/voice.js"></script>

    <script src="/js/javascript_compressed.js"></script>

    <script src="/js/msg/en.js"></script>

    <script src="/js/ace-builds/src-min-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
    <script>
        $(document).ready(function () {
            initBlocks();
        });

        var workspace;
        var xml_text;
        var editor;

        function initBlocks() {
            //editor가 있었던 blocklyDiv를 제거했다가 다시 요소할당
            if(editor !=null){
                console.log('removing ace editor');
                editor.container.remove();
                editor.destroy();
                editor = null;
            }

            $('#blocklyDiv').remove();
            $('.wrapper').find('.container').append("<div id='blocklyDiv'></div>");


            workspace = Blockly.inject('blocklyDiv',
                    {
                        media: '../../media/',
                        toolbox: document.getElementById('toolbox')
                    });
            Blockly.Xml.domToWorkspace(document.getElementById('startBlocks'),
                    workspace);

            loadCode();
            //workspace.addChangeListener(onFirstComment);

            //unbind event handler
            $('#workspace_transition').off('click');
            //set event handling for the editor transition button
            $('#workspace_transition').click(function(){
                runCode();
            });
            console.log('set ')
        }
        function showCode() {
            // Generate JavaScript code and display it.
            Blockly.JavaScript.INFINITE_LOOP_TRAP = null;
            var code = Blockly.JavaScript.workspaceToCode(workspace);
            alert(code);
        }

        function runCode() {
            console.log('runCode()');
            // Generate JavaScript code and run it.
            window.LoopTrap = 1000;
            Blockly.JavaScript.INFINITE_LOOP_TRAP =
                    'if (--window.LoopTrap == 0) throw "Infinite loop.";\n';
            var code = Blockly.JavaScript.workspaceToCode(workspace);
            Blockly.JavaScript.INFINITE_LOOP_TRAP = null;
            try {
                eval(code);
            } catch (e) {
                alert(e);
            }

            initEditor(code);
        }

        function initEditor(code) {
            editor = ace.edit("blocklyDiv");
            editor.setTheme("ace/theme/monokai");
            editor.getSession().setMode("ace/mode/javascript");
            editor.setValue(code);

            //unbind event handler
            $('#workspace_transition').off('click');

            //workspace_transition button에 initBlocks() 함수 이벤트 설정
            $('#workspace_transition').click(function(){
                initBlocks();
            });

        }

        function saveCode() {
            alert('save Code function!');
            var xml = Blockly.Xml.workspaceToDom(workspace);
            xml_text = Blockly.Xml.domToText(xml);

            var xmlRequest;
            var params = 'xml=' + xml_text;

            if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
                xmlRequest = new XMLHttpRequest();
            }
            else {// code for IE6, IE5
                xmlRequest = new ActiveXObject("Microsoft.XMLHTTP");
            }

            xmlRequest.onreadystatechange = function () {
                if (xmlRequest.readyState == 4 && xmlRequest.status == 200) {
                    msg = xmlRequest.responseText;
                    //alert(msg);

                    //uncomment after making statlabel
                    //document.getElementById('statlabel').innerHTML = "저장됨";
                }
            }
            xmlRequest.open("POST", '/project/workspace/<%= projectname %>', true);
            xmlRequest.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;charset=UTF-8");
            xmlRequest.setRequestHeader("Cache-Control", "no-cache, must-revalidate");
            xmlRequest.setRequestHeader("Pragma", "no-cache");
            xmlRequest.send(params);
        }

        function loadCode() {
            console.log('loadCode function ');
            console.log('<%= projectxml %>')
            var xml = Blockly.Xml.textToDom(htmlDecode('<%= projectxml %>'));
            Blockly.Xml.domToWorkspace(xml, workspace);
        }

        function htmlDecode(input) {
            var e = document.createElement('div');
            e.innerHTML = input;
            return e.childNodes[0].nodeValue;
        }

        /**
         sample of loading workspace
         var xml = Blockly.Xml.textToDom('<xml xmlns="http://www.w3.org/1999/xhtml"><block type="controls_if" id="[W2ba[1axfs/Z,gzSg`[" x="183" y="188"></block></xml>');
         Blockly.Xml.domToWorkspace(xml, workspace);
         alert('Load Source Code!');
         */

        /**
         sample of saving workspace
         var xml = Blockly.Xml.workspaceToDom(workspace);
         xml_text = Blockly.Xml.domToText(xml);
         console.log(xml_text);
         */

        function onFirstComment(event) {
            document.getElementById('statlabel').innerHTML = "저장하기";
            //TODO 자동저장, autosave
            //saveCode();
        }

    </script>

  </body>
</html>
